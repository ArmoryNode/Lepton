@page "/"
@using Lepton.Data.Extensions
@using Lepton.Web.ViewModels
@using Lepton.Data.Models 
@using static Lepton.Data.Constants.Testing

@inject HttpClient HttpClient


<h5>Name: @CharacterViewModel.Name</h5>
<input @bind="CharacterViewModel.Name" />

<div>
    <button @onclick="() => SaveCharacter()">Save Character</button>
    <button @onclick="() => LoadCharacters()">Load Characters</button>
</div>

<div>
    <ul>
        @foreach (var character in CharacterList)
        {
            <li>@character.Name</li>
        }
    </ul>
</div>

@code {
    public EventCallback<CharacterViewModel> CharacterViewModelChanged { get; set; }

    private CharacterViewModel _characterViewModel;
    CharacterViewModel CharacterViewModel {
        get => _characterViewModel;
        set {
            _characterViewModel = value;
            CharacterViewModelChanged.InvokeAsync(value);
        }
    }

    public EventCallback<IEnumerable<CharacterViewModel>> CharacterListChanged { get; set; }

    private IEnumerable<CharacterViewModel> _characterList = new List<CharacterViewModel>();
    IEnumerable<CharacterViewModel> CharacterList {
        get => _characterList;
        set {
            _characterList = value;
            CharacterListChanged.InvokeAsync(value);
        }
    }

    public Index()
    {
        CharacterViewModel = TestCharacter.ToModel<CharacterViewModel>();
    }

    public async Task LoadCharacters()
    {
        var characterList = await HttpClient.GetFromJsonAsync<IEnumerable<Character>>("api/Character");
        CharacterList = characterList.Select(c => c.ToModel<CharacterViewModel>());
    }

    public async Task SaveCharacter()
    {
        await HttpClient.PostAsJsonAsync("api/Character", CharacterViewModel);
    }
}

